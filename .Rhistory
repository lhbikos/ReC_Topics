citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
set.seed(2021) #sets a random seed so that we get the same results each time
Accurate <- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))#sample size, M and SD for each group
Accurate[Accurate>3]<-3 #set upper bound for DV
Accurate[Accurate<0]<-0 #set lower bound for DV
ID<-factor(seq(1,90)) #IDs for participants
COND<-c(rep("High", 30), rep("Low", 30), rep("Control", 30)) #name factors and identify how many in each group; should be in same order as first row of script
Acc_sim30 <-data.frame(ID, COND, Accurate) #groups the 3 variables into a single df:  ID#, DV, condition
View(Acc_sim30)
View(Acc_sim30)
#to write it to an outfile
write.table(Acc_sim30, file="newAcc30.csv", sep=",", col.names=TRUE, row.names=FALSE)
#to write it to an outfile
write.table(Acc_sim30, file="toCSV.csv", sep=",", col.names=TRUE, row.names=FALSE)
#to write it to an outfile
write.table(Acc_sim30, file="to_CSV.csv", sep=",", col.names=TRUE, row.names=FALSE)
#opening an Excel file (which must, first, be saved as a .csv file)
from_CSV <- read.csv ("to_CSV.csv", header = TRUE)
View(from_CSV)
saveRDS(Acc_sim30, "to_Robject.rds")
from_rds <- readRDS("to_Robject.rds")
View(Acc_sim30)
View(from_CSV)
View(from_rds)
library(psych)
round(psych::describe(Acc_sim30),3)
citr:::insert_citation()
#There are probe more efficient ways to simulate data.
#Given the information available in the manuscript, my approach was to first create the datasets for each of the racial ethnic groups that were provided and then binding them together.
Asian_mu <- c(1.52, 1.72, 2.69, 1.71, 2.14, 2.35, 2.42)
Asian_stddev <- c(2.52, 2.04, 0.47, 0.70, 0.80, 2.41, 3.36)
Asian_corMat <- matrix(c(1.00,  0.69,  0.19,  0.28,  0.32,  0.08,  0.23,
0.69,  1.00,  0.20,  0.29,  0.33,  0.13,  0.25,
0.19,  0.20,  1.00,  0.50,  0.50, -0.04,  0.09,
0.28,  0.29,  0.50,  1.00,  0.76,  0.04,  0.18,
0.32,  0.33,  0.50,  0.76,  1.00,  0.10,  0.21,
0.08,  0.13, -0.04,  0.04,  0.10,  1.00,  0.42,
0.23,  0.25,  0.09,  0.18,  0.21,  0.42,  1.00),
ncol=7)
Asian_corMat
Asian_covMat <- Asian_stddev %*% t(Asian_stddev) * Asian_corMat
Asian_covMat
library(MASS)
Asian_dat <- mvrnorm(n = 398, mu = Asian_mu, Sigma = Asian_covMat, empirical = TRUE)
colMeans(Asian_dat)
cor(Asian_dat)
set.seed(210807)#sets the random seed so that we consistently get the same results
#for practice, you could change (or remove) the random seed and try to interpret the results (they should be quite similar)
#There are probe more efficient ways to simulate data.
#Given the information available in the manuscript, my approach was to first create the datasets for each of the racial ethnic groups that were provided and then binding them together.
#First, the data for the students who identified as Asian American
Asian_mu <- c(1.52, 1.72, 2.69, 1.71, 2.14, 2.35, 2.42)
Asian_stddev <- c(2.52, 2.04, 0.47, 0.70, 0.80, 2.41, 3.36)
Asian_corMat <- matrix(c(1.00,  0.69,  0.19,  0.28,  0.32,  0.08,  0.23,
0.69,  1.00,  0.20,  0.29,  0.33,  0.13,  0.25,
0.19,  0.20,  1.00,  0.50,  0.50, -0.04,  0.09,
0.28,  0.29,  0.50,  1.00,  0.76,  0.04,  0.18,
0.32,  0.33,  0.50,  0.76,  1.00,  0.10,  0.21,
0.08,  0.13, -0.04,  0.04,  0.10,  1.00,  0.42,
0.23,  0.25,  0.09,  0.18,  0.21,  0.42,  1.00),
ncol=7)
Asian_covMat <- Asian_stddev %*% t(Asian_stddev) * Asian_corMat
library(MASS)
Asian_dat <- mvrnorm(n = 398, mu = Asian_mu, Sigma = Asian_covMat, empirical = TRUE)
Asian_df <- as.data.frame(Asian_dat)
library(tidyverse)
Asian_df <- rename(Asian_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Asian_df$RacEth <- "Asian"
#Second, the data for the students who identified as Black/African American
Black_mu <- c(4.45, 3.84, 2.60, 1.84, 2.10, 2.81, 2.14)
Black_stddev <- c(4.22, 3.08, 0.89, 0.80, 0.81, 2.49, 3.24)
Black_corMat <- matrix(c( 1.00,  0.81,  0.17,  0.15,  0.09,  0.05, -0.16,
0.81,  1.00,  0.17,  0.21,  0.11,  0.09, -0.01,
0.17,  0.17,  1.00,  0.59,  0.54,  0.05,  0.24,
0.15,  0.21,  0.59,  1.00,  0.72,  0.12,  0.22,
0.09,  0.11,  0.54,  0.72,  1.00,  0.21,  0.40,
0.05,  0.09,  0.05,  0.12,  0.21,  1.00,  0.65,
-0.16,-0.01,  0.24,  0.22,  0.40,  0.65,  1.00),
ncol = 7)
Black_covMat <- Black_stddev %*% t(Black_stddev) * Black_corMat
Black_dat <- mvrnorm(n = 133, mu = Black_mu, Sigma = Black_covMat, empirical = TRUE)
Black_df <- as.data.frame(Black_dat)
Black_df <- rename(Black_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Black_df$RacEth <- "Black"
#Third, the data for the students who identified as Latinx American
Latinx_mu <- c(1.56, 2.34, 2.69, 1.81, 2.17, 3.47, 2.69)
Latinx_stddev <- c(2.46, 2.49, 0.86, 0.71, 0.78, 2.59, 3.76)
Latinx_corMat <- matrix(c( 1.00,  0.78,  0.27,  0.36,  0.42, -0.06,  0.08,
0.78,  1.00,  0.33,  0.26,  0.35, -0.11, -0.02,
0.27,  0.33,  1.00,  0.62,  0.64, -0.04,  0.15,
0.36,  0.26,  0.62,  1.00,  0.81, -0.08,  0.17,
0.42,  0.35,  0.64,  0.81,  1.00, -0.06,  0.15,
-0.06,-0.11, -0.04, -0.08, -0.06,  1.00,  0.60,
0.08, -0.02,  0.15,  0.17,  0.15,  0.60,  1.00),
ncol = 7)
Latinx_covMat <- Latinx_stddev %*% t(Latinx_stddev) * Latinx_corMat
Latinx_dat <- mvrnorm(n = 182, mu = Latinx_mu, Sigma = Latinx_covMat, empirical = TRUE)
Latinx_df <- as.data.frame(Latinx_dat)
Latinx_df <- rename(Latinx_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Latinx_df$RacEth <- "Latinx"
Lui_sim_df <-bind_rows (Asian_df, Black_df, Latinx_df)
View(Lui_sim_df)
#write the simulated data  as a .csv
write.table(Lui_sim_df, file="Lui_CSV.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back in nthe simulated dat from a .csv file
df <- read.csv ("Lui_CSV.csv", header = TRUE)
View(df)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(Lui_sim_df, "Lui_RDS.rds")
#bring back the simulated dat from an .rds file
df <- read.csv ("Lui_RDS.rds", header = TRUE)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(Lui_sim_df, "Lui_RDS.rds")
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(Lui_sim_df, "Lui_RDS.rds")
#bring back the simulated dat from an .rds file
df <- readRDS("Lui_.rds")
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(Lui_sim_df, "Lui_RDS.rds")
#bring back the simulated dat from an .rds file
df <- readRDS("Lui_RDS.rds")
View(df)
df <- Lui_sim_df
str (df)
citr:::insert_citation()
# A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used.
library(tidyverse)
SIM_Lui <- SIM_Lui %>%
tidyverse::mutate(
RacEth = as.factor(RacEth))
# A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used.
library(tidyverse)
SIM_Lui <- SIM_Lui %>%
mutate(
RacEth = as.factor(RacEth))
# A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used.
library(tidyverse)
df <- df %>%
tidyverse::mutate(
RacEth = as.factor(RacEth))
# A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used.
library(tidyverse)
df <- df %>%
mutate(
RacEth = as.factor(RacEth))
str(SIM_Lui)
str(df)
tiny_df <-(select (df, mAggr, nAff, psyDist))
describe (tiny_df)
describeBy (df, df$RacEth, mat=TRUE)
# the pch = "." command produces a cleaner graphic and is especially useful when there are lots of variables
pairs.panels(tiny_df, pch=".")
tiny_df <-(select (df, mAggr, nAff, psyDis, RacEth))
tiny_df <-(select (df, mAggr, nAff, psyDis, RacEth))
tiny_df <-(select (df, mAggr, nAff, psyDist, RacEth))
describe (tiny_df)
describeBy (tiny_df, tiny_df$RacEth, mat=TRUE)
# the pch = "." command produces a cleaner graphic and is especially useful when there are lots of variables
pairs.panels(tiny_df, pch=".")
library(apaTables)
# unlike the psych package, this function removes any categorical variables
Table1_Cor <- apa.cor.table(tiny_df, filename = "Table1_Cor.doc", table.number = 1, show.conf.interval = FALSE, landscape = TRUE)
#swap in this command to see it in the console
print(Table1_Cor)
tiny_df <-(select (df, mAggr, nAff, psyDist))
describe (tiny_df)
describe (tiny_df)
describeBy (tiny_df, tiny_df$RacEth, mat=TRUE)
# the pch = "." command produces a cleaner graphic and is especially useful when there are lots of variables
pairs.panels(tiny_df, pch=".")
library(apaTables)
# unlike the psych package, this function removes any categorical variables
Table1_Cor <- apa.cor.table(tiny_df, filename = "Table1_Cor.doc", table.number = 1, show.conf.interval = FALSE, landscape = TRUE)
#swap in this command to see it in the console
print(Table1_Cor)
tiny_df <-(select (df, mAggr, nAff, psyDist))
describe (tiny_df)
options(scipen=999)#eliminates scientific notation
set.seed(210807)#sets the random seed so that we consistently get the same results
#for practice, you could change (or remove) the random seed and try to interpret the results (they should be quite similar)
#There are probe more efficient ways to simulate data.
#Given the information available in the manuscript, my approach was to first create the datasets for each of the racial ethnic groups that were provided and then binding them together.
#First, the data for the students who identified as Asian American
Asian_mu <- c(1.52, 1.72, 2.69, 1.71, 2.14, 2.35, 2.42)
Asian_stddev <- c(2.52, 2.04, 0.47, 0.70, 0.80, 2.41, 3.36)
Asian_corMat <- matrix(c(1.00,  0.69,  0.19,  0.28,  0.32,  0.08,  0.23,
0.69,  1.00,  0.20,  0.29,  0.33,  0.13,  0.25,
0.19,  0.20,  1.00,  0.50,  0.50, -0.04,  0.09,
0.28,  0.29,  0.50,  1.00,  0.76,  0.04,  0.18,
0.32,  0.33,  0.50,  0.76,  1.00,  0.10,  0.21,
0.08,  0.13, -0.04,  0.04,  0.10,  1.00,  0.42,
0.23,  0.25,  0.09,  0.18,  0.21,  0.42,  1.00),
ncol=7)
Asian_covMat <- Asian_stddev %*% t(Asian_stddev) * Asian_corMat
library(MASS)
Asian_dat <- mvrnorm(n = 398, mu = Asian_mu, Sigma = Asian_covMat, empirical = TRUE)
Asian_df <- as.data.frame(Asian_dat)
library(tidyverse)
Asian_df <- rename(Asian_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Asian_df$RacEth <- "Asian"
#Second, the data for the students who identified as Black/African American
Black_mu <- c(4.45, 3.84, 2.60, 1.84, 2.10, 2.81, 2.14)
Black_stddev <- c(4.22, 3.08, 0.89, 0.80, 0.81, 2.49, 3.24)
Black_corMat <- matrix(c( 1.00,  0.81,  0.17,  0.15,  0.09,  0.05, -0.16,
0.81,  1.00,  0.17,  0.21,  0.11,  0.09, -0.01,
0.17,  0.17,  1.00,  0.59,  0.54,  0.05,  0.24,
0.15,  0.21,  0.59,  1.00,  0.72,  0.12,  0.22,
0.09,  0.11,  0.54,  0.72,  1.00,  0.21,  0.40,
0.05,  0.09,  0.05,  0.12,  0.21,  1.00,  0.65,
-0.16,-0.01,  0.24,  0.22,  0.40,  0.65,  1.00),
ncol = 7)
Black_covMat <- Black_stddev %*% t(Black_stddev) * Black_corMat
Black_dat <- mvrnorm(n = 133, mu = Black_mu, Sigma = Black_covMat, empirical = TRUE)
Black_df <- as.data.frame(Black_dat)
Black_df <- rename(Black_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Black_df$RacEth <- "Black"
#Third, the data for the students who identified as Latinx American
Latinx_mu <- c(1.56, 2.34, 2.69, 1.81, 2.17, 3.47, 2.69)
Latinx_stddev <- c(2.46, 2.49, 0.86, 0.71, 0.78, 2.59, 3.76)
Latinx_corMat <- matrix(c( 1.00,  0.78,  0.27,  0.36,  0.42, -0.06,  0.08,
0.78,  1.00,  0.33,  0.26,  0.35, -0.11, -0.02,
0.27,  0.33,  1.00,  0.62,  0.64, -0.04,  0.15,
0.36,  0.26,  0.62,  1.00,  0.81, -0.08,  0.17,
0.42,  0.35,  0.64,  0.81,  1.00, -0.06,  0.15,
-0.06,-0.11, -0.04, -0.08, -0.06,  1.00,  0.60,
0.08, -0.02,  0.15,  0.17,  0.15,  0.60,  1.00),
ncol = 7)
Latinx_covMat <- Latinx_stddev %*% t(Latinx_stddev) * Latinx_corMat
Latinx_dat <- mvrnorm(n = 182, mu = Latinx_mu, Sigma = Latinx_covMat, empirical = TRUE)
Latinx_df <- as.data.frame(Latinx_dat)
Latinx_df <- rename(Latinx_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7)
Latinx_df$RacEth <- "Latinx"
Lui_sim_df <-bind_rows (Asian_df, Black_df, Latinx_df)
df <- Lui_sim_df
str (df)
# A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used.
library(tidyverse)
df <- df %>%
mutate(
RacEth = as.factor(RacEth))
#checking the structure of the data
str(df)
tiny_df <-(select (df, mAggr, nAff, psyDist))
describe(tiny_df)
library(psych)
describe(tiny_df)
describeBy (df, df$RacEth, mat=TRUE)
# the pch = "." command produces a cleaner graphic and is especially useful when there are lots of variables
pairs.panels(tiny_df, pch=".")
library(apaTables)
# unlike the psych package, this function removes any categorical variables
Table1_Cor <- apa.cor.table(tiny_df, filename = "Table1_Cor.doc", table.number = 1, show.conf.interval = FALSE, landscape = TRUE)
#swap in this command to see it in the console
print(Table1_Cor)
